
  html {
    font-size: 62.5%; // 1rem is 10px
    height: 100%;
    background: radial-gradient(ellipse at bottom, #5091DD 0%, #030617 100%);
    z-index: 3
    }
*,
*::after,
*::before {
    margin: 0;
    padding: 0;
    box-sizing: inherit;
    font-family: 'roboto';
}

body {
    overflow-x: hidden;
    font-weight: normal;
    color: white;
    // background-color: #D3DFB8;

    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    text-rendering: optimizeLegibility;
    -webkit-tap-highlight-color: transparent;
}
.jumbotron {
    text-align: center;
    z-index: 5;
    background: black
}

.form {
    z-index: 5
}
.app-wrapper {
    z-index: 0;
}
.app {
    margin-top: 2rem;
    display: grid;
    justify-items: center;
    // background-color: transparent;
    background: radial-gradient(ellipse at bottom, #5091DD 0%, #030617 100%);

}

// div.container {
//     background-color: rgba(0,0,0,0.5);
// }

.input-group {
    width: 50% !important;
  }


$lineColor : #030617;
$step : 3;
$borderWeight: 1px;

@function borderShadow ($n) {
  $value: '0px 0px #{$lineColor}';
  @for $i from 0 through $n {
    $value: '#{$value} , 0px #{($step)*$i}px #{$lineColor}'
  }
  @return unquote($value);
}

@function stripeShadow ($n) {
  $value: '0px 0px #{$lineColor}';
  @for $i from 0 through $n {
    $value: '#{$value} , #{($step)*$i}px 0px #{$lineColor}'
  }
  @return unquote($value);
}

$border:  borderShadow(1000);
$stripe:  stripeShadow(1000);

#grid {
  width: 100%;
  height: $borderWeight;
  box-shadow: $border;
  
  &:after {
    content: "";
    position: absolute;
    width: $borderWeight;
    height: 100%;
    box-shadow: $stripe
  }
}










// Grays
$color: #252526;
$color2: #313134;
$color3: #3e3e40;
$color4: #4a4a4d;
$color5: #575759;

body{
	height:100hv;
	background: #EDEEE9;
	margin:0;
}
@function makelongshadow($color, $color2, $color3, $color4, $color5) {
  $val: 0px 0px $color;
  @for $i from 1 through 20 {
    $val: #{$val}, -#{$i}px #{$i}px #{$color};
  }
  @for $i from 21 through 40 {
    $val: #{$val}, -#{$i}px #{$i}px #{$color2};
  }
  @for $i from 41 through 60 {
    $val: #{$val}, -#{$i}px #{$i}px #{$color3};
  }
  @for $i from 61 through 80 {
    $val: #{$val}, -#{$i}px #{$i}px #{$color4};
  }
  @for $i from 81 through 100 {
    $val: #{$val}, -#{$i}px #{$i}px #{$color5};
  }
  @return $val;
}

@keyframes animateShadow {
  0%   {
    text-shadow: makelongshadow($color, $color2, $color3, $color4, $color5);
  }
  20%  {
    text-shadow: makelongshadow($color2, $color3, $color4, $color5, $color);
  }
  40%  {
    text-shadow: makelongshadow($color3, $color4, $color5, $color, $color2);
  }
  60% {
    text-shadow: makelongshadow($color4, $color5, $color, $color2, $color3);
  }
  80% {
    text-shadow: makelongshadow($color5, $color, $color2, $color3, $color4);
  }
  100% {
    text-shadow: makelongshadow($color, $color2, $color3, $color4, $color5);
  }
}


h1 {
	padding : 40px;
	overflow:hidden;
	margin: 0px auto;
	width: 50vw;
	font-weight: 600;
	line-height: 0.8;
	font-size: 60px;
	text-align: left;
	font-size: 3rem;
	color: #EDEEE9;
	font-family: 'Georgia';
	text-shadow: makelongshadow($color, $color2, $color3, $color4, $color5);
  animation-name: animateShadow;
  animation-duration: 1s;
  animation-iteration-count: infinite;
}












@mixin btn-border-drawing($color: #ccc, $hover: black, $width: 2px, $vertical: top, $horizontal: left, $duration: 0.25s) {
    box-shadow: inset 0 0 0 $width $color;
    color: $color;
    transition: color $duration $duration/3;
    position: relative;
    
    &::before,
    &::after {
      border: 0 solid transparent;
      box-sizing: border-box;
      content: '';
      pointer-events: none;
      position: absolute;
      width: 0; height: 0;
      
      #{$vertical}: 0; 
      #{$horizontal}: 0;
    }
  
    &::before {
      $h-side: if($horizontal == 'left', 'right', 'left');
      
      border-#{$vertical}-width: $width;
      border-#{$h-side}-width: $width;
    }
    
    &::after {
      $v-side: if($vertical == 'top', 'bottom', 'top');
      
      border-#{$v-side}-width: $width;
      border-#{$horizontal}-width: $width;
    }
    
    &:hover {
      color: $hover;
      
      &::before,
      &::after {
        border-color: $hover;
        transition: border-color 0s, width $duration, height $duration;
        width: 100%;
        height: 100%;
      }
      
      &::before { transition-delay: 0s, 0s, $duration; }
      
      &::after { transition-delay: 0s, $duration, 0s; }
    }
  }
  
  .draw-border {
    @include btn-border-drawing(#a0d3e7, #ffe593, 4px, bottom, right);
  }
  
  //=== Button styling, semi-ignore
  .btn {
    background: none;
    border: none;
    cursor: pointer;
    line-height: 1.5;
    font: 700 1.2rem 'Roboto Slab', sans-serif;
    padding: 1em 2em;
    letter-spacing: 0.05rem;
    
    &:focus { outline: 2px dotted #55d7dc; }
  }
  
  //=== Pen styling, ignore
  body { 
    background: #1f1a25;
    display: flex; 
    align-items: center;
    justify-content: center;
    min-height: 100vh;
  }